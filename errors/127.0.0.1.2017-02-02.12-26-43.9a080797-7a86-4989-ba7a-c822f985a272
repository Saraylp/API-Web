(dp1
S'output'
p2
S"<type 'exceptions.UnboundLocalError'> local variable 'response' referenced before assignment"
p3
sS'layer'
p4
S'/home/kevin/web2py/applications/kayoo/controllers/community.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\nimport json\nfrom core.core import Core\n\ndef metodoDePrueba(response):\n    print "Me ha llegado una response"\n    myResponse = response\n    myResponse.headers[\'Access-Control-Allow-Origin\'] = \'*\'\n    myResponse.headers[\'Access-Control-Allow-Credentials\'] = True\n    myResponse.headers[\'Access-Control-Allow-Headers\'] = "origin, content-type, accept"\n    myResponse.headers[\'Access-Control-Allow-Methods\'] = "GET, POST, OPTIONS, DELETE"\n    return myResponse\n\n@HTTP_METHOD_CONSTRAINT("GET", request)\n#@CHECK_PARAMETERS(request.vars,{"id":"optional"},"getFirstByFieldsCommunity")\ndef getFirstByFieldsCommunity():\n    core = Core()\n    result = core.CommunityOperation("getFirstByFieldsCommunity", request.vars)\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT("GET", request)\n@CHECK_PARAMETERS(request.vars,{"id":"mandatory"},"getByIdCommunity")\ndef getByIdCommunity():\n    _id = request.vars["id"]\n    core = Core()\n    response = metodoDePrueba(response)\n    result = core.CommunityOperation("getByIdCommunity", {"_id":_id})\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT("GET", request)\ndef getCommunities():\n    core = Core()\n    response.headers[\'Access-Control-Allow-Origin\'] = \'*\'\n    response.headers[\'Access-Control-Allow-Credentials\'] = True\n    response.headers[\'Access-Control-Allow-Headers\'] = "origin, content-type, accept"\n    response.headers[\'Access-Control-Allow-Methods\'] = "GET, POST, OPTIONS, DELETE"\n    result = core.CommunityOperation("getAllCommunity", {})\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT("DELETE", request)\n@CHECK_PARAMETERS(request.vars,{"id":"mandatory"},"deleteCommunity")\ndef deleteCommunity():\n    _id = request.vars["id"]\n    core = Core()\n    result = core.CommunityOperation("deleteCommunity", {"_id":_id})\n    if result >= 1:\n        return "Success"\n    return "Failed"\n\n@HTTP_METHOD_CONSTRAINT("POST", request)\ndef newCommunity():\n    core = Core()\n    response.headers[\'Access-Control-Allow-Origin\'] = \'*\'\n    response.headers[\'Access-Control-Allow-Credentials\'] = True\n    response.headers[\'Access-Control-Allow-Headers\'] = "origin, content-type, accept"\n    response.headers[\'Access-Control-Allow-Methods\'] = "GET, POST, OPTIONS, DELETE"\n    result = core.CommunityOperation("createCommunity", dict(request.vars))\n    return result\n\n@HTTP_METHOD_CONSTRAINT("POST", request)\n@CHECK_PARAMETERS(request.vars,{"id":"mandatory", "new_values":"mandatory"},"updateCommunity")\ndef updateCommunity():\n    _id = request.vars["id"]\n    _new_values = request.vars["new_values"]\n    core = Core()\n    result = core.CommunityOperation("updateCommunity", {"_id":_id, "new_values":_new_values})\n    return response.json(result)\n\nresponse._vars=response._caller(getByIdCommunity)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/kevin/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/kevin/web2py/applications/kayoo/controllers/community.py", line 69, in <module>\n  File "/home/kevin/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "applications/kayoo/modules/http/http_method_constraint.py", line 11, in wrapped_func\n  File "applications/kayoo/modules/decorators/check_parameters.py", line 50, in wrapped_func\n    return function()\n  File "/home/kevin/web2py/applications/kayoo/controllers/community.py", line 26, in getByIdCommunity\n    response = metodoDePrueba(response)\nUnboundLocalError: local variable \'response\' referenced before assignment\n'
p11
s.