(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> ObjectId('5891cced481f3416aa786783') is not JSON serializable"
p3
sS'layer'
p4
S'/home/kevin/web2py/applications/kayoo/controllers/post.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["GET"], request)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef getFirstByFieldsPost():\n    core = Core()\n    result = core.PostOperation("getFirstByFieldsPost", request.vars)\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["GET"], request)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id":"mandatory"}, "getByIdPost")\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef getByIdPost():\n    _id = request.vars["id"]\n    core = Core()\n    result = core.PostOperation("getByIdPost", {"id":_id})\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["GET"], request)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef getPosts():\n    core = Core()\n    result = core.PostOperation("getAllPost", {})\n    return response.json(result)\n\n##Used from Front##\n#@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["DELETE"], request)\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST", "OPTIONS"], request)\n@HTTP_METHOD_OPTION_CHECKER_DECORATOR.isOption(request, response)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id":"mandatory"}, "deletePost")\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef deletePost():\n    _id = request.vars["id"]\n    core = Core()\n    result = core.PostOperation("deletePost", {"_id":_id})\n    if result >= 1:\n        return response.json({"result":0})\n    return response.json({"result":1})\n\n##Used from Front##\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST", "OPTIONS"], request)\n@HTTP_METHOD_OPTION_CHECKER_DECORATOR.isOption(request, response)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef newPost():\n    core = Core()\n    result = core.PostOperation("createPost", dict(request.vars))\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST", "OPTIONS"], request)\n@HTTP_METHOD_OPTION_CHECKER_DECORATOR.isOption(request, response)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id":"mandatory", "new_values":"mandatory"}, "updatePost")\ndef updatePost():\n    _id = request.vars["id"]\n    _new_values = request.vars["new_values"]\n    core = Core()\n    result = core.PostOperation("updatePost", {"_id":_id, "new_values":_new_values})\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["GET"], request)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef getPostsByCommunityId():\n    _id = request.vars["_id"]\n    core = Core()\n    result = core.PostOperation("getPostsByCommunityId", {"community_id" : _id})\n    return response.json(result)\n\n##Used from Front##\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["GET"], request)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef getCommunityPosts():\n    _id = request.vars["_id"]\n    core = Core()\n    result = core.PostOperation("getCommunityPosts", {"community_id": _id})\n    return response.json(result)\n\n##Used from Front##\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST", "OPTIONS"], request)\n@HTTP_METHOD_OPTION_CHECKER_DECORATOR.isOption(request, response)\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id":"mandatory", "post":"mandatory"}, "updatePostContent")\ndef updatePostContent():\n    _id = request.vars["id"]\n    _post = request.vars["post"]\n    result = Core().PostOperation("updatePost", {"_id":_id, "new_values":{"post":str(_post)}})\n    if not result:\n        return response.json({"result":1})\n    result[\'result\'] = 0\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST","OPTIONS"], request)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id_user":"mandatory", "id":"mandatory"}, "like2Post")\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef like2Post():\n    core = Core()\n    result = core.PostOperation("like2Post", dict(request.vars))\n    return response.json(result)\n\n@HTTP_METHOD_CONSTRAINT_DECORATOR.isAllowed(["POST","OPTIONS"], request)\n@CHECK_PARAMETERS_DECORATOR.checkIt(request.vars, {"id_user":"mandatory", "id_post":"mandatory"}, "unlike2Post")\n@CROSS_DOMAIN_DECORATOR.changesHeaders(response)\ndef unlike2Post():\n    core = Core()\n    result = core.PostOperation("unlike2Post", dict(request.vars))\n    return response.json(result)\nresponse._vars=response._caller(like2Post)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/kevin/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/kevin/web2py/applications/kayoo/controllers/post.py", line 106, in <module>\n  File "/home/kevin/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "applications/kayoo/modules/decorators/http_method_constraint_decorator.py", line 13, in decorator\n    return f(*args, **kwargs)\n  File "applications/kayoo/modules/decorators/check_parameters_decorator.py", line 46, in decorator\n    return f(*args, **kwargs)\n  File "applications/kayoo/modules/decorators/cross_domain_decorator.py", line 14, in decorator\n    return f(*args, **kwargs)\n  File "/home/kevin/web2py/applications/kayoo/controllers/post.py", line 97, in like2Post\n    return response.json(result)\n  File "/home/kevin/web2py/gluon/globals.py", line 661, in json\n    return json(data, default=default or custom_json)\n  File "/home/kevin/web2py/gluon/serializers.py", line 137, in json\n    value = json_parser.dumps(value, default=default)\n  File "/usr/lib/python2.7/json/__init__.py", line 251, in dumps\n    sort_keys=sort_keys, **kw).encode(obj)\n  File "/usr/lib/python2.7/json/encoder.py", line 207, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File "/usr/lib/python2.7/json/encoder.py", line 270, in iterencode\n    return _iterencode(o, 0)\n  File "/home/kevin/web2py/gluon/serializers.py", line 110, in custom_json\n    raise TypeError(repr(o) + " is not JSON serializable")\nTypeError: ObjectId(\'5891cced481f3416aa786783\') is not JSON serializable\n'
p11
s.